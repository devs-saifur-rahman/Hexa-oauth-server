// <auto-generated />
using System;
using Hexa.Web.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hexa.Web.Migrations
{
    [DbContext(typeof(HexaDbContext))]
    [Migration("20220616175102_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Hexa.Web.Models.oatuh.GrantType", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GrantTypeid")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("GrantTypeid");

                    b.ToTable("GrantTypes");
                });

            modelBuilder.Entity("Hexa.Web.Models.oatuh.GrantType", b =>
                {
                    b.HasOne("Hexa.Web.Models.oatuh.GrantType", null)
                        .WithMany("GrantTypes")
                        .HasForeignKey("GrantTypeid");
                });

            modelBuilder.Entity("Hexa.Web.Models.oatuh.GrantType", b =>
                {
                    b.Navigation("GrantTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
